import java.util.*;

public class Programming8
{
  
  
  public static void main(String[] args) 
  {
    int[] a1 = {1,2,3,4,5,7,2,2,2,2,2,2,2,2,2,1};
    int[] a2 = {1,2,3,4};
    int[] a3 = {9, 4, 2, 1, 3, 12, 14, 6, 8};
    System.out.print(sweep(a3));
    
    zeroOut(a1, a2);
    System.out.print(Arrays.toString(a3));
    System.out.print(longestSortedSequence(a1));
  }
  
  public static void zeroOut(int[] a1, int[] a2) 
  { int c = 0;
    int a2L = a2.length;
    for (int i=0; i <= a1.length-a2L; i++) {
      for (int j=0; j < a2L; j++) {
        if (a1[j+i]==a2[j]) {c++;}
      } if (c==a2L) { 
        for (int m=0; m < a2L; m++){ a1[m+i]=0;}
      } c=0;
    }
  }
  
  public static int longestSortedSequence (int[] a) {
   int lgth = 0;
   int count = 1;
   int index = 0;
   for (int i = 0; i < a.length-1 ; i++ ) {
     while (i+index+1<a.length && a[i+index+1]>=a[i+index]) {count++; index++;}
   if (count>lgth) {lgth=count;}
   index=0;
   count=1;
   }
   return lgth;
  }
  
  public static boolean sweep(int[] a) {
    int count=0, temp;
    for (int i =0; i< a.length-1; i++ ) {
      if(a[i+1]<a[i]) {temp = a[i]; a[i] = a[i+1]; a[i+1] = temp; count++; }
    }
    if(count>0) {return true;}
    else {return false;}
  }
  
  
}
